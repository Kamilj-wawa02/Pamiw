@page "/books/createbook"

@attribute [Authorize]

@inject IJSRuntime JSRuntime
@inject ITranslationsManager TranslationsManager
@inject ILibraryService LibraryService
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>@TranslationsManager.Get(MainLayout.Language, "CreateBook")</h3>

 <BookForm book="book" OnValidSubmit="HandleValidSubmit"></BookForm>


@code {

    /* Wyciete z wyzej
    @if (message != null)
    {
        <p><em>@message</em></p>
    }
    else
    {
    */

    private Book book = new Book();
    private string? message = null;

    async Task HandleValidSubmit()
    {
        var response = await LibraryService.CreateBookAsync(book);
        if (response.Success)
            NavigationManager.NavigateTo("/books/booksList");
        else
        {
            message = response.Message;
            JSRuntime.InvokeVoidAsync("alert", TranslationsManager.Get(MainLayout.Language, "RequestFailed") + response.Message);
        }
    }


}