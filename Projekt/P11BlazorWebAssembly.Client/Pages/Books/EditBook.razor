@page "/books/editbook/{Id:int}"

@attribute [Authorize]

@inject IJSRuntime JSRuntime
@inject ITranslationsManager TranslationsManager
@inject ILibraryService LibraryService
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Edit Book</h3>


<BookForm book="book" OnValidSubmit="HandleValidSubmit"></BookForm>
<button class="btn btn-danger bottom-button" style="margin-top: 1rem" @onclick=HandleDelete>@TranslationsManager.Get(MainLayout.Language, "Delete")</button>



@code {

    /* Wyciete z wyzej
    if (book == null)
    {
    <p><em>@message</em></p>
    }
    else
    {
     */

    [Parameter]
    public int Id { get; set; }

    private Book book = new Book();
    private string message = "Loading books...";

    protected override async Task OnInitializedAsync()
    {
        var response = await LibraryService.GetBookByIdAsync(Id);
        if (response.Success)
            book = response.Data;
        else
        {
            message = response.Message;
            JSRuntime.InvokeVoidAsync("alert", TranslationsManager.Get(MainLayout.Language, "RequestFailed") + response.Message);
        }
    }

    async Task HandleValidSubmit()
    {
        var response = await LibraryService.UpdateBookAsync(book);
        if (response.Success)
            NavigationManager.NavigateTo("/books/booksList");
        else
        {
            message = response.Message;
            JSRuntime.InvokeVoidAsync("alert", TranslationsManager.Get(MainLayout.Language, "RequestFailed") + response.Message);
        }
        
    }

    async Task HandleDelete()
    {
        var response = await LibraryService.DeleteBookAsync(Id);
        if (response.Success)
            NavigationManager.NavigateTo("/books/booksList");
        else
        {
            message = response.Message;
            JSRuntime.InvokeVoidAsync("alert", TranslationsManager.Get(MainLayout.Language, "RequestFailed") + response.Message);
        }
    }
}