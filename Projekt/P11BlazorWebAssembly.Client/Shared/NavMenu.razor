@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Web.Extensions;

@inject ITranslationsManager TranslationsManager
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">@TranslationsManager.Get(MainLayout.Language, "Library")</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column" style="height: 100%">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> @TranslationsManager.Get(MainLayout.Language, "Home")
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="books/booksList">
                <span class="oi oi-list-rich" aria-hidden="true"></span> @TranslationsManager.Get(MainLayout.Language, "OpenBookList")
            </NavLink>
        </div>

        <div style="height: 70%">
            <div style="position: absolute; bottom: 0; width: 100%">
                <div style="display: flex; width: 100%">
                    <div style="margin-left: 1rem;">
                        <NavLink class="nav-link" @onclick="ToggleLanguage" style="color: white; cursor: default">
                            @if (MainLayout.Language == "polish")
                            {
                                <span aria-hidden="true"><u>PL</u> | EN</span>
                            }
                            else
                            {
                                <span aria-hidden="true">PL | <u>EN</u></span>
                            }
                        </NavLink>
                    </div>
                    <div>
                        <NavLink class="nav-link" @onclick="ToggleTheme" style="color: white">
                            @if (isDarkTheme)
                            {
                                <span class="oi oi-sun" aria-hidden="true"></span>
                            }
                            else
                            {
                                <span class="oi oi-moon" aria-hidden="true"></span>
                            }
                            <!-- <span class="oi oi-contrast" aria-hidden="true"></span> -->
                        </NavLink>
                    </div>
                </div>
            </div>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private string language = "polish";

    // THEME
    private bool isDarkTheme;

    protected override async Task OnInitializedAsync()
    {
        var storedTheme = await LocalStorage.GetItemAsync<bool?>("isDarkTheme");
        isDarkTheme = storedTheme.GetValueOrDefault(false);
        SetTheme();
    }

    private async void ToggleTheme()
    {
        isDarkTheme = !isDarkTheme;
        await LocalStorage.SetItemAsync("isDarkTheme", isDarkTheme);
        SetTheme();
    }

    private async void SetTheme()
    {
        string theme = isDarkTheme ? "dark" : "light";
        var module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/site.js");
        await module.InvokeVoidAsync("setTheme", theme);
    }

    // LANGUAGE

    private async void ToggleLanguage()
    {
        if (MainLayout.Language.Contains("english", StringComparison.OrdinalIgnoreCase))
        {
            MainLayout.Language = "polish";
        }
        else
        {
            MainLayout.Language = "english";
        }
        await LocalStorage.SetItemAsync("language", MainLayout.Language);
        JSRuntime.InvokeVoidAsync("location.reload");
    }

}
